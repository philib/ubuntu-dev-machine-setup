---

- name: install terminal tools 
  apt:
    name: "{{ terminal_tools }}"
    state: present
    force_apt_get: yes

- name: install oh-my-zsh
  block:
  - name: check oh-my-zsh presence
    stat:
      path: '~{{ local_username }}/.oh-my-zsh'
    register: dotohmyzsh
  - name: clone oh-my-zsh 
    when: not dotohmyzsh.stat.exists
    tags:
      # Suppress warning: [ANSIBLE0006] git used in place of git module
      # Git module doesn't allow us to set `core.autocrlf=input`.
      - skip_ansible_lint
    become: yes
    become_user: '{{ local_username }}'
    # core.autocrlf=input prevents https://github.com/robbyrussell/oh-my-zsh/issues/4402
    command: 'git clone -c core.autocrlf=input --depth=1 https://github.com/robbyrussell/oh-my-zsh.git .oh-my-zsh'
    args:
      chdir: '~{{ local_username }}'
      creates: '~{{ local_username }}/.oh-my-zsh'

- block:
  - name: check if .zshrc exists in user's home dir
    stat:
      path: "~{{ local_username }}/.zshrc"
    register: dotzshrc
  - name: copy oh-my-zsh .zshrc template
    copy:
      src: '~{{ local_username }}/.oh-my-zsh/templates/zshrc.zsh-template'
      dest: '~{{ local_username }}/.zshrc'
    when: not dotzshrc.stat.exists


- name: set permissions of oh-my-zsh
  become: yes
  file:
    path: '~{{ local_username }}/.oh-my-zsh'
    # Prevent the cloned repository from having insecure permissions. Failing to do
    # so causes compinit() calls to fail with "command not found: compdef" errors
    # for users with insecure umasks (e.g., "002", allowing group writability).
    mode: 'go-w'
    recurse: yes

- name: set default shell for users
  become: yes
  user:
    name: '{{ local_username }}'
    shell: /bin/zsh
- name: install latest fzf
  block:
  - name: check if fzf already installed
    stat:
      path: "~{{ local_username }}/.fzf"
    register: dotfzf
  - name: clone fzf repository
    command: "git clone --depth 1 https://github.com/junegunn/fzf.git ~{{ local_username }}/.fzf"
    when: not dotfzf.stat.exists
  - name: install fzf
    command: "~{{ local_username }}/.fzf/install"
    when: not dotfzf.stat.exists

- name: link fdfind to fd
  block:
  - name: create ~/.local/bin for fdfind
    ansible.builtin.file:
      path: '~{{ local_username }}/.local/bin'
      state: directory
      mode: '0755'
  - name: get fdfind's location
    command: which fdfind
    register: fdfind
  - name: symlink fdfind bin to fd bin
    ansible.builtin.file:
      src: "{{ fdfind.stdout | quote }}"
      dest: '~{{ local_username }}/.local/bin/fd'
      state: link
      force: true
  - name: add fd to PATH
    shell: echo $PATH
    environment:
      PATH: '~{{ local_username }}/.local/bin/fd:{{ ansible_env.PATH}}'

- name: install vim plugins
  command: vim +'PlugInstall --sync' +qa

- name: install jira cli
  block:
  - name: install ruby
    apt:
      name: ruby
      state: present
      force_apt_get: yes
  - name: install terjira
    command: "gem install terjira"

- name: install fzf-tab
  command: "git clone https://github.com/Aloxaf/fzf-tab '{{ lookup('env', 'ZSH_CUSTOM') }}'/plugins/fzf-tab"

- name: install yarn-completion
  command: "git clone https://github.com/buonomo/yarn-completion '{{ lookup('env', 'ZSH_CUSTOM') }}'/plugins/yarn-completion"
...
