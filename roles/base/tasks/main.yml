---

# mount /tmp on tmpfs
- block:
    - name: clear the existing /tmp dir (1/5)
      shell: "/bin/rm -rf *"
      args:
        chdir: /tmp
        warn: no

    - name: copy systemd file (2/5)
      copy:
        src: /usr/share/systemd/tmp.mount
        dest: /lib/systemd/system/tmp.mount
        remote_src: True

    - name: create dir /etc/systemd/system/tmp.mount.d (3/5)
      file:
        path: /etc/systemd/system/tmp.mount.d
        state: directory

    - name: create tmp.mount custom options file (4/5)
      copy:
        dest: /etc/systemd/system/tmp.mount.d/options.conf
        content: |
          [Mount]
          Options=mode=1777,strictatime,nosuid,nodev,size=512M

    - name: start and enable tmp.mount on boot (5/5)
      systemd:
        name: tmp.mount
        enabled: yes
        state: started
        daemon_reload: yes

- name: enable ufw firewall but allow ssh
  ufw:
    rule: limit
    port: ssh
    proto: tcp
    state: enabled

- name: disable system crash reports
  lineinfile:
    dest: /etc/default/apport
    regexp: "^enabled=(0|1)"
    line: enabled=0
    state: present

# It may be desirable to set this to zero, so that application memory is retained as long as possible at the expense
# of the page cache. When there is still a memory shortage, the kernel can still use swapping.
- name: tune system swappiness
  sysctl:
    name: vm.swappiness
    value: '10'
    state: present

- name: reduce space used by journald
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^#SystemMaxUse=$'
    line: SystemMaxUse=256M

- name: perform a dist upgrade
  apt:
    update_cache: yes
    upgrade: dist
    force_apt_get: yes

      #- name: install system tools
      #  apt:
      #    name: "{{ base_system_tools }}"
      #    state: present
      #    force_apt_get: yes

- name: install developer tools
  apt:
    name: "{{ base_developer_tools }}"
    state: present
    force_apt_get: yes

- name: create .ssh dir
  file:
    path: "~{{ local_username }}/.ssh"
    state: directory
    mode: '0700'
  become: yes
  become_user: "{{ local_username }}"

- name: install media packages
  apt:
    name: "{{ base_media_tools }}"
    state: present
    force_apt_get: yes

- name: install virtualization tools
  apt:
    name: "{{ base_virtualization_tools }}"
    state: present
    force_apt_get: yes

# add user to docker group to run docker commands without sudo
# add user to vboxusers group so that user can attach usb devices to guest OS
- name: add user to docker and vboxusers groups
  user:
    name: "{{ local_username }}"
    append: yes
    groups:
      - docker
      - vboxusers

# make fstrim run daily rather than the default weekly schedule for SSD longevity
- block:
    - name: enable fstrim.timer
      systemd:
        name: fstrim.timer
        state: started
        enabled: yes

    - name: create systemd fstrim.timer override dir
      file:
        path: /etc/systemd/system/fstrim.timer.d
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: create override.conf file for fstrim.timer
      copy:
        src: etc/systemd/system/fstrim.timer.d/override.conf
        dest: /etc/systemd/system/fstrim.timer.d/override.conf
        owner: root
        group: root
        mode: 0644

    - name: force systemd to reread configs
      systemd:
        daemon_reload: yes

- name: set chromium as default browser
  command: xdg-settings set default-web-browser chromium-browser.desktop

  # disable pulse audio auto mic boost (see https://nzeid.net/pulseaudio-disable-auto-volume)
- block:
    - name: backup alsamixer settings
      command: 'cp -vR /usr/share/pulseaudio/alsa-mixer/paths /usr/share/pulseaudio/alsa-mixer/paths_backup'
    - name: disable auto mic boost
      command: 'perl -pi -0 -e "s/(\[[A-Za-z ]*Mic Boost\][A-Za-z._=\s-]+volume *= *)merge/\1zero/g;" /usr/share/pulseaudio/alsa-mixer/paths/*'

- name: automatically log in
  when: active_directory == false
  blockinfile:
    path: /etc/gdm3/custom.conf
    insertafter: '^#  AutomaticLogin ='
    block: |
      AutomaticLoginEnable = true
      AutomaticLogin = {{ local_username }}

...
